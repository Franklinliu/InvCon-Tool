Daikon version 5.8.6, released December 2, 2020; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:
Warning: Daikon is using a dataflow hierarchy analysis on a data trace that does not appear to be over a program execution, consider running Daikon with the --nohierarchy flag.

===========================================================================
Nnbtoken.approve(address,uint256):::EXIT1
this == orig(this)
this.Token_own_totalSupply == orig(this.Token_own_totalSupply)
this.Token_own_totalSupply == sum(this.balances[].getValue())
this.Token_own_totalSupply == sum(orig(this.balances[].getValue()))
this.decimals == orig(this.decimals)
this.balances == orig(this.balances)
this.allowed == orig(this.allowed)
_spender == orig(_spender)
_value == orig(_value)
_value == this.allowed[pair(msg.sender,_spender)].getSubValue()
msg.sender == orig(msg.sender)
msg.value == orig(msg.value)
msg.value == orig(this.allowed[post(pair(_spender,msg.sender))].getSubValue())
block.timestamp == orig(block.timestamp)
orig(this.Token_own_totalSupply) == sum(this.balances[].getValue())
orig(this.Token_own_totalSupply) == sum(orig(this.balances[].getValue()))
orig(_value) == this.allowed[pair(msg.sender,_spender)].getSubValue()
orig(msg.value) == orig(this.allowed[post(pair(_spender,msg.sender))].getSubValue())
sum(this.balances[].getValue()) == sum(orig(this.balances[].getValue()))
this.Token_own_totalSupply == 50000000000000000
this.decimals == 8
this.balances has only one value
this.balances[].getValue() elements >= 0
this.allowed has only one value
this.allowed[].getSubLength() elements one of { 1, 2, 3 }
_value == 115792089237316195423570985008687907853269984665640564039457584007913129639935
msg.value == 0
orig(this) has only one value
orig(this.Token_own_totalSupply) == 50000000000000000
orig(this.decimals) == 8
orig(this.allowed[].getSubLength()) elements one of { 1, 2 }
orig(_value) == 115792089237316195423570985008687907853269984665640564039457584007913129639935
orig(msg.value) == 0
sum(this.balances[].getValue()) == 50000000000000000
sum(orig(this.balances[].getValue())) == 50000000000000000
this.allowed[pair(msg.sender,_spender)].getSubValue() == 115792089237316195423570985008687907853269984665640564039457584007913129639935
orig(this.allowed[post(pair(_spender,msg.sender))].getSubValue()) == 0
sum(this.allowed[].getSubLength()) - sum(orig(this.allowed[].getSubLength())) - 1 == 0
===========================================================================
Nnbtoken.transfer(address,uint256):::EXIT1
this == orig(this)
this.Token_own_totalSupply == orig(this.Token_own_totalSupply)
this.Token_own_totalSupply == sum(this.balances[].getValue())
this.Token_own_totalSupply == sum(orig(this.balances[].getValue()))
this.decimals == orig(this.decimals)
this.balances == orig(this.balances)
this.allowed == orig(this.allowed)
this.allowed[].getSubLength() == orig(this.allowed[].getSubLength())
_to == orig(_to)
_value == orig(_value)
msg.sender == orig(msg.sender)
msg.value == orig(msg.value)
msg.value == orig(this.allowed[post(pair(_to,msg.sender))].getSubValue())
block.timestamp == orig(block.timestamp)
orig(this.Token_own_totalSupply) == sum(this.balances[].getValue())
orig(this.Token_own_totalSupply) == sum(orig(this.balances[].getValue()))
orig(msg.value) == orig(this.allowed[post(pair(_to,msg.sender))].getSubValue())
sum(this.balances[].getValue()) == sum(orig(this.balances[].getValue()))
sum(this.allowed[].getSubLength()) == sum(orig(this.allowed[].getSubLength()))
sum(this.allowed[].getSubValue()) == sum(orig(this.allowed[].getSubValue()))
this.Token_own_totalSupply == 50000000000000000
this.decimals == 8
this.balances has only one value
this.balances[].getValue() elements >= 0
this.allowed has only one value
this.allowed[].getSubLength() elements one of { 1, 3 }
this.allowed[].getSubLength() sorted by >
msg.value == 0
orig(this) has only one value
orig(this) != null
orig(this.Token_own_totalSupply) == 50000000000000000
orig(this.decimals) == 8
orig(this.balances[].getValue()) elements >= 0
orig(msg.value) == 0
sum(this.balances[].getValue()) == 50000000000000000
sum(this.allowed[].getSubLength()) one of { 0, 1, 4 }
sum(this.allowed[].getSubValue()) >= 0
sum(orig(this.balances[].getValue())) == 50000000000000000
sum(orig(this.allowed[].getSubValue())) >= 0
this.balances[orig(msg.sender)].getValue() >= 0
orig(this.allowed[post(pair(_to,msg.sender))].getSubValue()) == 0
this.decimals < _value
this.decimals < block.timestamp
this.decimals < orig(this.Token_own_totalSupply)
this.decimals < orig(_value)
this.decimals < orig(block.timestamp)
this.decimals < sum(this.balances[].getValue())
this.decimals < sum(orig(this.balances[].getValue()))
this.decimals < this.balances[orig(_to)].getValue()
this.decimals < orig(this.balances[post(msg.sender)].getValue())
this.allowed[].getSubLength() elements <= sum(this.allowed[].getSubLength())
_value <= orig(this.Token_own_totalSupply)
_value <= sum(this.balances[].getValue())
_value <= sum(orig(this.balances[].getValue()))
_value <= this.balances[orig(_to)].getValue()
_value <= orig(this.balances[post(msg.sender)].getValue())
msg.value < block.timestamp
msg.value < orig(this.Token_own_totalSupply)
msg.value < orig(this.decimals)
msg.value < orig(_value)
msg.value < orig(block.timestamp)
msg.value < sum(this.balances[].getValue())
msg.value <= sum(this.allowed[].getSubValue())
msg.value < sum(orig(this.balances[].getValue()))
msg.value <= sum(orig(this.allowed[].getSubValue()))
msg.value < this.balances[orig(_to)].getValue()
msg.value <= this.balances[orig(msg.sender)].getValue()
msg.value <= orig(this.balances[post(_to)].getValue())
msg.value < orig(this.balances[post(msg.sender)].getValue())
block.timestamp < orig(this.Token_own_totalSupply)
block.timestamp < orig(_value)
block.timestamp < sum(this.balances[].getValue())
block.timestamp < sum(orig(this.balances[].getValue()))
block.timestamp < this.balances[orig(_to)].getValue()
block.timestamp < orig(this.balances[post(msg.sender)].getValue())
orig(this.decimals) < orig(_value)
orig(this.decimals) < orig(block.timestamp)
orig(this.decimals) < this.balances[orig(_to)].getValue()
orig(this.decimals) < orig(this.balances[post(msg.sender)].getValue())
orig(_to) != orig(msg.sender)
orig(_value) <= this.balances[orig(_to)].getValue()
orig(_value) <= orig(this.balances[post(msg.sender)].getValue())
orig(msg.value) < orig(block.timestamp)
orig(msg.value) <= sum(this.allowed[].getSubValue())
orig(msg.value) <= sum(orig(this.allowed[].getSubValue()))
orig(msg.value) < this.balances[orig(_to)].getValue()
orig(msg.value) <= this.balances[orig(msg.sender)].getValue()
orig(msg.value) <= orig(this.balances[post(_to)].getValue())
orig(msg.value) < orig(this.balances[post(msg.sender)].getValue())
orig(block.timestamp) < this.balances[orig(_to)].getValue()
orig(block.timestamp) < orig(this.balances[post(msg.sender)].getValue())
this.balances[orig(msg.sender)].getValue() < orig(this.balances[post(msg.sender)].getValue())
_value - this.balances[orig(_to)].getValue() + orig(this.balances[post(_to)].getValue()) == 0
_value + this.balances[orig(msg.sender)].getValue() - orig(this.balances[post(msg.sender)].getValue()) == 0
orig(_value) - this.balances[orig(_to)].getValue() + orig(this.balances[post(_to)].getValue()) == 0
orig(_value) + this.balances[orig(msg.sender)].getValue() - orig(this.balances[post(msg.sender)].getValue()) == 0
===========================================================================
Nnbtoken.transferFrom(address,address,uint256):::EXIT1
this == orig(this)
this.Token_own_totalSupply == orig(this.Token_own_totalSupply)
this.Token_own_totalSupply == sum(this.balances[].getValue())
this.Token_own_totalSupply == sum(orig(this.balances[].getValue()))
this.decimals == orig(this.decimals)
this.balances == orig(this.balances)
this.allowed == orig(this.allowed)
this.allowed[].getSubLength() == orig(this.allowed[].getSubLength())
_from == orig(_from)
_to == orig(_to)
_value == orig(_value)
msg.sender == orig(msg.sender)
msg.value == orig(msg.value)
msg.value == orig(this.allowed[post(pair(_from,_to))].getSubValue())
block.timestamp == orig(block.timestamp)
orig(this.Token_own_totalSupply) == sum(this.balances[].getValue())
orig(this.Token_own_totalSupply) == sum(orig(this.balances[].getValue()))
orig(msg.value) == orig(this.allowed[post(pair(_from,_to))].getSubValue())
sum(this.balances[].getValue()) == sum(orig(this.balances[].getValue()))
sum(this.allowed[].getSubLength()) == sum(orig(this.allowed[].getSubLength()))
this.Token_own_totalSupply == 50000000000000000
this.decimals == 8
this.balances has only one value
this.balances[].getValue() elements >= 0
this.allowed has only one value
this.allowed[].getSubLength() elements one of { 1, 2, 3 }
this.allowed[].getSubLength() sorted by >
msg.value == 0
orig(this) has only one value
orig(this) != null
orig(this.Token_own_totalSupply) == 50000000000000000
orig(this.decimals) == 8
orig(this.balances[].getValue()) elements >= 0
orig(msg.value) == 0
sum(this.balances[].getValue()) == 50000000000000000
sum(this.allowed[].getSubLength()) one of { 1, 3, 4 }
sum(orig(this.balances[].getValue())) == 50000000000000000
orig(this.allowed[post(pair(_from,_to))].getSubValue()) == 0
this.Token_own_totalSupply < sum(this.allowed[].getSubValue())
this.Token_own_totalSupply < sum(orig(this.allowed[].getSubValue()))
this.Token_own_totalSupply < this.allowed[pair(_from,msg.sender)].getSubValue()
this.Token_own_totalSupply < orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
this.decimals < _value
this.decimals < block.timestamp
this.decimals < orig(this.Token_own_totalSupply)
this.decimals < orig(_value)
this.decimals < orig(block.timestamp)
this.decimals < sum(this.balances[].getValue())
this.decimals < sum(this.allowed[].getSubValue())
this.decimals < sum(orig(this.balances[].getValue()))
this.decimals < sum(orig(this.allowed[].getSubValue()))
this.decimals < this.balances[orig(_to)].getValue()
this.decimals < orig(this.balances[post(_from)].getValue())
this.decimals < this.allowed[pair(_from,msg.sender)].getSubValue()
this.decimals < orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
this.allowed[].getSubLength() elements <= sum(this.allowed[].getSubLength())
_value < orig(this.Token_own_totalSupply)
_value < sum(this.balances[].getValue())
_value < sum(this.allowed[].getSubValue())
_value < sum(orig(this.balances[].getValue()))
_value < sum(orig(this.allowed[].getSubValue()))
_value <= this.balances[orig(_to)].getValue()
_value <= orig(this.balances[post(_from)].getValue())
_value < this.allowed[pair(_from,msg.sender)].getSubValue()
_value < orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
msg.value < block.timestamp
msg.value < orig(this.Token_own_totalSupply)
msg.value < orig(this.decimals)
msg.value < orig(_value)
msg.value < orig(block.timestamp)
msg.value < sum(this.balances[].getValue())
msg.value < sum(this.allowed[].getSubValue())
msg.value < sum(orig(this.balances[].getValue()))
msg.value < sum(orig(this.allowed[].getSubValue()))
msg.value <= this.balances[orig(_from)].getValue()
msg.value < this.balances[orig(_to)].getValue()
msg.value < orig(this.balances[post(_from)].getValue())
msg.value < orig(this.balances[post(_to)].getValue())
msg.value < this.allowed[pair(_from,msg.sender)].getSubValue()
msg.value < orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
block.timestamp < orig(this.Token_own_totalSupply)
block.timestamp < orig(_value)
block.timestamp < sum(this.balances[].getValue())
block.timestamp < sum(this.allowed[].getSubValue())
block.timestamp < sum(orig(this.balances[].getValue()))
block.timestamp < sum(orig(this.allowed[].getSubValue()))
block.timestamp < this.balances[orig(_to)].getValue()
block.timestamp < orig(this.balances[post(_from)].getValue())
block.timestamp < this.allowed[pair(_from,msg.sender)].getSubValue()
block.timestamp < orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
orig(this.Token_own_totalSupply) < sum(this.allowed[].getSubValue())
orig(this.Token_own_totalSupply) < sum(orig(this.allowed[].getSubValue()))
orig(this.Token_own_totalSupply) < this.allowed[pair(_from,msg.sender)].getSubValue()
orig(this.Token_own_totalSupply) < orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
orig(this.decimals) < orig(_value)
orig(this.decimals) < orig(block.timestamp)
orig(this.decimals) < sum(this.balances[].getValue())
orig(this.decimals) < sum(this.allowed[].getSubValue())
orig(this.decimals) < sum(orig(this.balances[].getValue()))
orig(this.decimals) < sum(orig(this.allowed[].getSubValue()))
orig(this.decimals) < this.balances[orig(_to)].getValue()
orig(this.decimals) < orig(this.balances[post(_from)].getValue())
orig(this.decimals) < this.allowed[pair(_from,msg.sender)].getSubValue()
orig(this.decimals) < orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
orig(_from) != orig(_to)
orig(_from) != orig(msg.sender)
orig(_to) != orig(msg.sender)
orig(_value) < sum(this.balances[].getValue())
orig(_value) < sum(this.allowed[].getSubValue())
orig(_value) < sum(orig(this.balances[].getValue()))
orig(_value) < sum(orig(this.allowed[].getSubValue()))
orig(_value) <= this.balances[orig(_to)].getValue()
orig(_value) <= orig(this.balances[post(_from)].getValue())
orig(_value) < this.allowed[pair(_from,msg.sender)].getSubValue()
orig(_value) < orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
orig(msg.value) < orig(block.timestamp)
orig(msg.value) < sum(this.balances[].getValue())
orig(msg.value) < sum(this.allowed[].getSubValue())
orig(msg.value) < sum(orig(this.balances[].getValue()))
orig(msg.value) < sum(orig(this.allowed[].getSubValue()))
orig(msg.value) <= this.balances[orig(_from)].getValue()
orig(msg.value) < this.balances[orig(_to)].getValue()
orig(msg.value) < orig(this.balances[post(_from)].getValue())
orig(msg.value) < orig(this.balances[post(_to)].getValue())
orig(msg.value) < this.allowed[pair(_from,msg.sender)].getSubValue()
orig(msg.value) < orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
orig(block.timestamp) < sum(this.balances[].getValue())
orig(block.timestamp) < sum(this.allowed[].getSubValue())
orig(block.timestamp) < sum(orig(this.balances[].getValue()))
orig(block.timestamp) < sum(orig(this.allowed[].getSubValue()))
orig(block.timestamp) < this.balances[orig(_to)].getValue()
orig(block.timestamp) < orig(this.balances[post(_from)].getValue())
orig(block.timestamp) < this.allowed[pair(_from,msg.sender)].getSubValue()
orig(block.timestamp) < orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
sum(this.balances[].getValue()) < sum(this.allowed[].getSubValue())
sum(this.balances[].getValue()) < sum(orig(this.allowed[].getSubValue()))
sum(this.balances[].getValue()) < this.allowed[pair(_from,msg.sender)].getSubValue()
sum(this.balances[].getValue()) < orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
sum(this.allowed[].getSubValue()) < sum(orig(this.allowed[].getSubValue()))
sum(orig(this.balances[].getValue())) < sum(orig(this.allowed[].getSubValue()))
sum(orig(this.balances[].getValue())) < this.allowed[pair(_from,msg.sender)].getSubValue()
sum(orig(this.balances[].getValue())) < orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
this.balances[orig(_from)].getValue() < orig(this.balances[post(_from)].getValue())
this.balances[orig(_from)].getValue() < this.allowed[pair(_from,msg.sender)].getSubValue()
this.balances[orig(_from)].getValue() < orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
this.balances[orig(_to)].getValue() < this.allowed[pair(_from,msg.sender)].getSubValue()
this.balances[orig(_to)].getValue() < orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
orig(this.balances[post(_from)].getValue()) < this.allowed[pair(_from,msg.sender)].getSubValue()
orig(this.balances[post(_from)].getValue()) < orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
orig(this.balances[post(_to)].getValue()) < this.allowed[pair(_from,msg.sender)].getSubValue()
orig(this.balances[post(_to)].getValue()) < orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
this.allowed[pair(_from,msg.sender)].getSubValue() > orig(this.allowed[post(pair(_from,_to))].getSubValue())
this.allowed[pair(_from,msg.sender)].getSubValue() < orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
orig(this.allowed[post(pair(_from,_to))].getSubValue()) < orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
- _value - sum(this.allowed[].getSubValue()) + sum(orig(this.allowed[].getSubValue())) == 0
_value + this.balances[orig(_from)].getValue() - orig(this.balances[post(_from)].getValue()) == 0
_value - this.balances[orig(_to)].getValue() + orig(this.balances[post(_to)].getValue()) == 0
- orig(_value) - sum(this.allowed[].getSubValue()) + sum(orig(this.allowed[].getSubValue())) == 0
orig(_value) + this.balances[orig(_from)].getValue() - orig(this.balances[post(_from)].getValue()) == 0
orig(_value) - this.balances[orig(_to)].getValue() + orig(this.balances[post(_to)].getValue()) == 0
Exiting Daikon.
