Daikon version 5.8.6, released December 2, 2020; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:
Warning: Daikon is using a dataflow hierarchy analysis on a data trace that does not appear to be over a program execution, consider running Daikon with the --nohierarchy flag.

===========================================================================
Finder.Lock(address):::EXIT1
this == orig(this)
this.Ownable_own_owner == msg.sender
this.Ownable_own_owner == orig(this.Ownable_own_owner)
this.Ownable_own_owner == orig(msg.sender)
this.Ownable_own_newOwner == orig(this.Ownable_own_newOwner)
this.decimals == msg.value
this.decimals == orig(this.decimals)
this.decimals == orig(msg.value)
this.decimals == sum(this.allowed[].getSubValue())
this.decimals == orig(this.allowed[post(pair(_holder,msg.sender))].getSubValue())
this.initialSupply == this.totalSupply_
this.initialSupply == orig(this.initialSupply)
this.initialSupply == orig(this.totalSupply_)
this.initialSupply == sum(this.balances[].getValue())
this.initialSupply == sum(orig(this.balances[].getValue()))
this.totalSupply_ == orig(this.initialSupply)
this.totalSupply_ == orig(this.totalSupply_)
this.totalSupply_ == sum(this.balances[].getValue())
this.totalSupply_ == sum(orig(this.balances[].getValue()))
this.balances == orig(this.balances)
this.frozen == orig(this.frozen)
this.allowed == orig(this.allowed)
this.allowed[].getSubLength() == orig(this.allowed[].getSubLength())
_holder == orig(_holder)
msg.value == orig(this.decimals)
msg.value == orig(msg.value)
msg.value == sum(this.allowed[].getSubValue())
msg.value == orig(this.allowed[post(pair(_holder,msg.sender))].getSubValue())
block.timestamp == orig(block.timestamp)
orig(this.decimals) == orig(msg.value)
orig(this.decimals) == sum(this.allowed[].getSubValue())
orig(this.decimals) == orig(this.allowed[post(pair(_holder,msg.sender))].getSubValue())
orig(this.initialSupply) == orig(this.totalSupply_)
orig(this.initialSupply) == sum(this.balances[].getValue())
orig(this.initialSupply) == sum(orig(this.balances[].getValue()))
orig(this.totalSupply_) == sum(this.balances[].getValue())
orig(this.totalSupply_) == sum(orig(this.balances[].getValue()))
orig(msg.value) == sum(this.allowed[].getSubValue())
orig(msg.value) == orig(this.allowed[post(pair(_holder,msg.sender))].getSubValue())
sum(this.balances[].getValue()) == sum(orig(this.balances[].getValue()))
sum(this.allowed[].getSubLength()) == sum(orig(this.allowed[].getSubLength()))
sum(this.allowed[].getSubValue()) == orig(this.allowed[post(pair(_holder,msg.sender))].getSubValue())
this.frozen[_holder].getValue() == this.frozen[orig(_holder)].getValue()
this.decimals == 0
this.initialSupply == 1000000000
this.totalSupply_ == 1000000000
this.balances has only one value
this.balances[].getValue() elements >= 0
this.frozen has only one value
this.allowed has only one value
msg.value == 0
orig(this) has only one value
orig(this) != null
orig(this.decimals) == 0
orig(this.initialSupply) == 1000000000
orig(this.totalSupply_) == 1000000000
orig(msg.value) == 0
sum(this.balances[].getValue()) == 1000000000
sum(this.allowed[].getSubLength()) == 0
sum(this.allowed[].getSubValue()) == 0
sum(orig(this.balances[].getValue())) == 1000000000
this.balances[this.Ownable_own_owner].getValue() one of { 0, 1000000000 }
this.frozen[orig(_holder)].getValue() == true
orig(this.allowed[post(pair(_holder,msg.sender))].getSubValue()) == 0
this.Ownable_own_owner != this.Ownable_own_newOwner
this.Ownable_own_owner != orig(_holder)
this.Ownable_own_newOwner != orig(_holder)
this.decimals < this.initialSupply
this.decimals < this.totalSupply_
this.decimals < block.timestamp
this.decimals < orig(this.initialSupply)
this.decimals < orig(this.totalSupply_)
this.decimals < orig(block.timestamp)
this.decimals < sum(this.balances[].getValue())
this.decimals < sum(orig(this.balances[].getValue()))
this.decimals <= this.balances[this.Ownable_own_owner].getValue()
this.decimals < this.balances[orig(_holder)].getValue()
this.initialSupply < block.timestamp
this.initialSupply < orig(block.timestamp)
this.totalSupply_ < block.timestamp
this.totalSupply_ < orig(block.timestamp)
this.frozen[orig(_holder)].getValue() in this.frozen[].getValue()
msg.value < block.timestamp
msg.value < orig(block.timestamp)
msg.value <= this.balances[this.Ownable_own_owner].getValue()
msg.value < this.balances[orig(_holder)].getValue()
orig(this.decimals) < orig(block.timestamp)
orig(this.decimals) <= this.balances[this.Ownable_own_owner].getValue()
orig(this.decimals) < this.balances[orig(_holder)].getValue()
orig(this.initialSupply) < orig(block.timestamp)
orig(this.totalSupply_) < orig(block.timestamp)
orig(msg.value) < orig(block.timestamp)
orig(msg.value) <= this.balances[this.Ownable_own_owner].getValue()
orig(msg.value) < this.balances[orig(_holder)].getValue()
sum(this.allowed[].getSubValue()) <= this.balances[this.Ownable_own_owner].getValue()
sum(this.allowed[].getSubValue()) < this.balances[orig(_holder)].getValue()
this.balances[this.Ownable_own_owner].getValue() < this.balances[orig(_holder)].getValue()
===========================================================================
Finder.UnLock(address):::EXIT1
this == orig(this)
this.Ownable_own_owner == msg.sender
this.Ownable_own_owner == orig(this.Ownable_own_owner)
this.Ownable_own_owner == orig(msg.sender)
this.Ownable_own_newOwner == orig(this.Ownable_own_newOwner)
this.decimals == orig(msg.value)
this.decimals == orig(this.allowed[post(pair(_holder,msg.sender))].getSubValue())
this.balances == orig(this.balances)
this.frozen == orig(this.frozen)
this.allowed == orig(this.allowed)
this.allowed[].getSubLength() == orig(this.allowed[].getSubLength())
_holder == orig(_holder)
orig(msg.value) == orig(this.allowed[post(pair(_holder,msg.sender))].getSubValue())
sum(this.allowed[].getSubLength()) == sum(orig(this.allowed[].getSubLength()))
this.decimals == 0
this.initialSupply == 1000000000
this.balances has only one value
this.frozen has only one value
this.frozen[].getValue() elements == false
this.allowed has only one value
orig(this) has only one value
orig(this.frozen[].getValue()) elements == true
orig(msg.value) == 0
orig(block.timestamp) == 1611539055
sum(this.allowed[].getSubLength()) == 0
this.balances[this.Ownable_own_owner].getValue() == 999999000
this.balances[orig(_holder)].getValue() == 1000
this.frozen[orig(_holder)].getValue() == false
orig(this.frozen[post(_holder)].getValue()) == true
orig(this.allowed[post(pair(_holder,msg.sender))].getSubValue()) == 0
this.frozen[].getValue() elements == this.frozen[orig(_holder)].getValue()
this.frozen[orig(_holder)].getValue() in this.frozen[].getValue()
orig(this.frozen[].getValue()) elements == orig(this.frozen[post(_holder)].getValue())
orig(this.frozen[post(_holder)].getValue()) in orig(this.frozen[].getValue())
===========================================================================
Finder.transfer(address,uint256):::EXIT1
this == orig(this)
this.Ownable_own_owner == orig(this.Ownable_own_owner)
this.Ownable_own_newOwner == orig(this.Ownable_own_newOwner)
this.decimals == msg.value
this.decimals == orig(this.decimals)
this.decimals == orig(msg.value)
this.decimals == sum(this.allowed[].getSubValue())
this.decimals == orig(this.allowed[post(pair(_to,msg.sender))].getSubValue())
this.initialSupply == this.totalSupply_
this.initialSupply == orig(this.initialSupply)
this.initialSupply == orig(this.totalSupply_)
this.initialSupply == sum(this.balances[].getValue())
this.initialSupply == sum(orig(this.balances[].getValue()))
this.totalSupply_ == orig(this.initialSupply)
this.totalSupply_ == orig(this.totalSupply_)
this.totalSupply_ == sum(this.balances[].getValue())
this.totalSupply_ == sum(orig(this.balances[].getValue()))
this.balances == orig(this.balances)
this.frozen == orig(this.frozen)
this.frozen[].getValue() == orig(this.frozen[].getValue())
this.allowed == orig(this.allowed)
this.allowed[].getSubLength() == orig(this.allowed[].getSubLength())
_to == orig(_to)
_value == orig(_value)
msg.sender == orig(msg.sender)
msg.value == orig(this.decimals)
msg.value == orig(msg.value)
msg.value == sum(this.allowed[].getSubValue())
msg.value == orig(this.allowed[post(pair(_to,msg.sender))].getSubValue())
block.timestamp == orig(block.timestamp)
orig(this.decimals) == orig(msg.value)
orig(this.decimals) == sum(this.allowed[].getSubValue())
orig(this.decimals) == orig(this.allowed[post(pair(_to,msg.sender))].getSubValue())
orig(this.initialSupply) == orig(this.totalSupply_)
orig(this.initialSupply) == sum(this.balances[].getValue())
orig(this.initialSupply) == sum(orig(this.balances[].getValue()))
orig(this.totalSupply_) == sum(this.balances[].getValue())
orig(this.totalSupply_) == sum(orig(this.balances[].getValue()))
orig(msg.value) == sum(this.allowed[].getSubValue())
orig(msg.value) == orig(this.allowed[post(pair(_to,msg.sender))].getSubValue())
sum(this.balances[].getValue()) == sum(orig(this.balances[].getValue()))
sum(this.allowed[].getSubLength()) == sum(orig(this.allowed[].getSubLength()))
sum(this.allowed[].getSubValue()) == orig(this.allowed[post(pair(_to,msg.sender))].getSubValue())
this.frozen[msg.sender].getValue() == this.frozen[orig(msg.sender)].getValue()
this.frozen[orig(msg.sender)].getValue() == orig(this.frozen[post(msg.sender)].getValue())
this.frozen[orig(msg.sender)].getValue() == orig(this.frozen[msg.sender].getValue())
this.decimals == 0
this.initialSupply == 1000000000
this.totalSupply_ == 1000000000
this.balances has only one value
this.balances[].getValue() elements >= 0
this.frozen has only one value
this.allowed has only one value
msg.value == 0
orig(this) has only one value
orig(this) != null
orig(this.decimals) == 0
orig(this.initialSupply) == 1000000000
orig(this.totalSupply_) == 1000000000
orig(this.balances[].getValue()) elements >= 0
orig(msg.value) == 0
sum(this.balances[].getValue()) == 1000000000
sum(this.allowed[].getSubLength()) == 0
sum(this.allowed[].getSubValue()) == 0
sum(orig(this.balances[].getValue())) == 1000000000
this.balances[this.Ownable_own_owner].getValue() >= 0
orig(this.balances[post(this.Ownable_own_owner)].getValue()) >= 0
this.frozen[orig(_to)].getValue() == true
this.frozen[orig(msg.sender)].getValue() == false
orig(this.allowed[post(pair(_to,msg.sender))].getSubValue()) == 0
this.Ownable_own_owner != this.Ownable_own_newOwner
this.Ownable_own_newOwner != orig(_to)
this.Ownable_own_newOwner != orig(msg.sender)
this.decimals < this.initialSupply
this.decimals < this.totalSupply_
this.decimals < _value
this.decimals < block.timestamp
this.decimals < orig(this.initialSupply)
this.decimals < orig(this.totalSupply_)
this.decimals < orig(_value)
this.decimals < orig(block.timestamp)
this.decimals < sum(this.balances[].getValue())
this.decimals < sum(orig(this.balances[].getValue()))
this.decimals <= this.balances[this.Ownable_own_owner].getValue()
this.decimals <= orig(this.balances[post(this.Ownable_own_owner)].getValue())
this.decimals < this.balances[orig(_to)].getValue()
this.decimals <= this.balances[orig(msg.sender)].getValue()
this.decimals < orig(this.balances[post(_to)].getValue())
this.decimals < orig(this.balances[post(msg.sender)].getValue())
this.initialSupply < block.timestamp
this.initialSupply < orig(block.timestamp)
this.totalSupply_ < block.timestamp
this.totalSupply_ < orig(block.timestamp)
this.frozen[].getValue() elements == this.frozen[orig(_to)].getValue()
this.frozen[orig(_to)].getValue() in this.frozen[].getValue()
this.frozen[].getValue() elements == this.frozen[orig(msg.sender)].getValue()
this.frozen[orig(msg.sender)].getValue() in this.frozen[].getValue()
_value < block.timestamp
_value < orig(block.timestamp)
_value <= this.balances[orig(_to)].getValue()
_value <= orig(this.balances[post(msg.sender)].getValue())
msg.value < block.timestamp
msg.value < orig(_value)
msg.value < orig(block.timestamp)
msg.value <= this.balances[this.Ownable_own_owner].getValue()
msg.value <= orig(this.balances[post(this.Ownable_own_owner)].getValue())
msg.value < this.balances[orig(_to)].getValue()
msg.value <= this.balances[orig(msg.sender)].getValue()
msg.value < orig(this.balances[post(_to)].getValue())
msg.value < orig(this.balances[post(msg.sender)].getValue())
orig(this.decimals) < orig(_value)
orig(this.decimals) < orig(block.timestamp)
orig(this.decimals) <= this.balances[this.Ownable_own_owner].getValue()
orig(this.decimals) <= orig(this.balances[post(this.Ownable_own_owner)].getValue())
orig(this.decimals) < this.balances[orig(_to)].getValue()
orig(this.decimals) <= this.balances[orig(msg.sender)].getValue()
orig(this.decimals) < orig(this.balances[post(_to)].getValue())
orig(this.decimals) < orig(this.balances[post(msg.sender)].getValue())
orig(this.initialSupply) < orig(block.timestamp)
orig(this.totalSupply_) < orig(block.timestamp)
orig(_to) != orig(msg.sender)
orig(_value) < orig(block.timestamp)
orig(_value) <= this.balances[orig(_to)].getValue()
orig(_value) <= orig(this.balances[post(msg.sender)].getValue())
orig(msg.value) < orig(block.timestamp)
orig(msg.value) <= this.balances[this.Ownable_own_owner].getValue()
orig(msg.value) <= orig(this.balances[post(this.Ownable_own_owner)].getValue())
orig(msg.value) < this.balances[orig(_to)].getValue()
orig(msg.value) <= this.balances[orig(msg.sender)].getValue()
orig(msg.value) < orig(this.balances[post(_to)].getValue())
orig(msg.value) < orig(this.balances[post(msg.sender)].getValue())
sum(this.allowed[].getSubValue()) <= this.balances[this.Ownable_own_owner].getValue()
sum(this.allowed[].getSubValue()) <= orig(this.balances[post(this.Ownable_own_owner)].getValue())
sum(this.allowed[].getSubValue()) < this.balances[orig(_to)].getValue()
sum(this.allowed[].getSubValue()) <= this.balances[orig(msg.sender)].getValue()
sum(this.allowed[].getSubValue()) < orig(this.balances[post(_to)].getValue())
sum(this.allowed[].getSubValue()) < orig(this.balances[post(msg.sender)].getValue())
orig(this.balances[post(this.Ownable_own_owner)].getValue()) <= orig(this.balances[post(_to)].getValue())
this.balances[orig(msg.sender)].getValue() < orig(this.balances[post(msg.sender)].getValue())
_value - this.balances[orig(_to)].getValue() + orig(this.balances[post(_to)].getValue()) == 0
_value + this.balances[orig(msg.sender)].getValue() - orig(this.balances[post(msg.sender)].getValue()) == 0
orig(_value) - this.balances[orig(_to)].getValue() + orig(this.balances[post(_to)].getValue()) == 0
orig(_value) + this.balances[orig(msg.sender)].getValue() - orig(this.balances[post(msg.sender)].getValue()) == 0
===========================================================================
Finder.transfer(address,uint256):::EXIT2
this == orig(this)
this.Ownable_own_owner == orig(this.Ownable_own_owner)
this.Ownable_own_newOwner == orig(this.Ownable_own_newOwner)
this.decimals == msg.value
this.decimals == orig(this.decimals)
this.decimals == orig(msg.value)
this.decimals == this.balances[this.Ownable_own_owner].getValue()
this.decimals == orig(this.allowed[post(pair(_to,msg.sender))].getSubValue())
this.initialSupply == this.totalSupply_
this.initialSupply == orig(this.initialSupply)
this.totalSupply_ == orig(this.initialSupply)
this.balances == orig(this.balances)
this.frozen == orig(this.frozen)
this.frozen[].getValue() == orig(this.frozen[].getValue())
this.allowed == orig(this.allowed)
this.allowed[].getSubLength() == orig(this.allowed[].getSubLength())
_to == orig(_to)
_value == orig(_value)
msg.sender == orig(msg.sender)
msg.value == orig(this.decimals)
msg.value == orig(msg.value)
msg.value == this.balances[this.Ownable_own_owner].getValue()
msg.value == orig(this.allowed[post(pair(_to,msg.sender))].getSubValue())
block.timestamp == orig(block.timestamp)
orig(this.decimals) == orig(msg.value)
orig(this.decimals) == this.balances[this.Ownable_own_owner].getValue()
orig(this.decimals) == orig(this.allowed[post(pair(_to,msg.sender))].getSubValue())
orig(msg.value) == this.balances[this.Ownable_own_owner].getValue()
orig(msg.value) == orig(this.allowed[post(pair(_to,msg.sender))].getSubValue())
sum(this.allowed[].getSubLength()) == sum(orig(this.allowed[].getSubLength()))
this.balances[this.Ownable_own_owner].getValue() == orig(this.allowed[post(pair(_to,msg.sender))].getSubValue())
this.decimals == 0
this.initialSupply == 1000000000
this.totalSupply_ == 1000000000
this.balances has only one value
this.balances[].getValue() elements >= 0
this.frozen has only one value
this.allowed has only one value
_value == 100
msg.value == 0
block.timestamp one of { 1622708047, 1622765454, 1625016152 }
orig(this) has only one value
orig(this.decimals) == 0
orig(this.initialSupply) == 1000000000
orig(_value) == 100
orig(msg.value) == 0
orig(block.timestamp) one of { 1622708047, 1622765454, 1625016152 }
sum(this.allowed[].getSubLength()) == 0
this.balances[this.Ownable_own_owner].getValue() == 0
this.balances[orig(msg.sender)].getValue() one of { 156987572, 156989361, 156994061 }
orig(this.allowed[post(pair(_to,msg.sender))].getSubValue()) == 0
Exiting Daikon.
