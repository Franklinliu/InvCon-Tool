Daikon version 5.8.6, released December 2, 2020; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:
Warning: Daikon is using a dataflow hierarchy analysis on a data trace that does not appear to be over a program execution, consider running Daikon with the --nohierarchy flag.

===========================================================================
ElonMuskCoin.approve(address,uint256):::EXIT1
this == orig(this)
this.decimals == orig(this.decimals)
this._totalSupply == this.balances[orig(spender)].getValue()
this.balances == orig(this.balances)
this.allowed == orig(this.allowed)
spender == orig(spender)
msg.sender == orig(spender)
orig(spender) == orig(msg.sender)
orig(tokens) == this.allowed[pair(spender,msg.sender)].getSubValue()
orig(msg.value) == orig(this.allowed[post(pair(spender,msg.sender))].getSubValue())
this.decimals == 18
this._totalSupply == 1000000000
this.balances has only one value
this.allowed has only one value
this.allowed[].getSubLength() elements == 1
orig(this) has only one value
orig(this.decimals) == 18
orig(tokens) == 1000000000000000000000000000
orig(msg.value) == 0
orig(block.timestamp) == 1610920006
sum(this.allowed[].getSubLength()) == 1
sum(orig(this.allowed[].getSubLength())) == 0
this.balances[orig(spender)].getValue() == 1000000000
this.allowed[pair(spender,msg.sender)].getSubValue() == 1000000000000000000000000000
orig(this.allowed[post(pair(spender,msg.sender))].getSubValue()) == 0
sum(this.allowed[].getSubLength()) in this.allowed[].getSubLength()
this.allowed[].getSubLength() elements == sum(this.allowed[].getSubLength())
Exiting Daikon.
