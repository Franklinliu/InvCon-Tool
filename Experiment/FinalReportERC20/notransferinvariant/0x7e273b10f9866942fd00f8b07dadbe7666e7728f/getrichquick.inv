Daikon version 5.8.6, released December 2, 2020; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:
Warning: Daikon is using a dataflow hierarchy analysis on a data trace that does not appear to be over a program execution, consider running Daikon with the --nohierarchy flag.

===========================================================================
getrichquick.approve(address,uint256):::EXIT1
this == orig(this)
this.ERC20Basic_own_totalSupply == orig(this.ERC20Basic_own_totalSupply)
this.ERC20Basic_own_totalSupply == sum(this.BasicToken_own_balances[].getValue())
this.BasicToken_own_balances == orig(this.BasicToken_own_balances)
this.StandardToken_own_allowed == orig(this.StandardToken_own_allowed)
_spender == orig(_spender)
_value == orig(_value)
_value == this.StandardToken_own_allowed[pair(msg.sender,_spender)].getSubValue()
msg.sender == orig(msg.sender)
msg.value == orig(msg.value)
msg.value == orig(this.StandardToken_own_allowed[post(pair(_spender,msg.sender))].getSubValue())
block.timestamp == orig(block.timestamp)
orig(this.ERC20Basic_own_totalSupply) == sum(this.BasicToken_own_balances[].getValue())
orig(_value) == this.StandardToken_own_allowed[pair(msg.sender,_spender)].getSubValue()
orig(msg.value) == orig(this.StandardToken_own_allowed[post(pair(_spender,msg.sender))].getSubValue())
this.ERC20Basic_own_totalSupply == 8000000000000000000000
this.BasicToken_own_balances has only one value
this.StandardToken_own_allowed has only one value
this.StandardToken_own_allowed[].getSubLength() elements == 1
_value == 115792089237316195423570985008687907853269984665640564039457584007913129639935
msg.value == 0
block.timestamp one of { 1611803009, 1611803249 }
orig(this) has only one value
orig(this.ERC20Basic_own_totalSupply) == 8000000000000000000000
orig(this.StandardToken_own_allowed[].getSubLength()) elements == 1
orig(_value) == 115792089237316195423570985008687907853269984665640564039457584007913129639935
orig(msg.value) == 0
orig(block.timestamp) one of { 1611803009, 1611803249 }
sum(this.BasicToken_own_balances[].getValue()) == 8000000000000000000000
sum(this.StandardToken_own_allowed[].getSubLength()) one of { 1, 2 }
sum(this.StandardToken_own_allowed[].getSubValue()) one of { 115792089237316195423570985008687907853269984665640564039457584007913129639935, 231584178474632390847141970017375815706539969331281128070915168015826259279870 }
sum(orig(this.StandardToken_own_allowed[].getSubLength())) one of { 0, 1 }
sum(orig(this.StandardToken_own_allowed[].getSubValue())) one of { 0, 115792089237316195423570985008687907853269984665640564031457584007913129639935 }
this.BasicToken_own_balances[orig(msg.sender)].getValue() one of { 599699499906916349389, 8000000000000000000000 }
this.StandardToken_own_allowed[pair(msg.sender,_spender)].getSubValue() == 115792089237316195423570985008687907853269984665640564039457584007913129639935
orig(this.StandardToken_own_allowed[post(pair(_spender,msg.sender))].getSubValue()) == 0
orig(this.StandardToken_own_allowed[].getSubLength()) elements == sum(orig(this.StandardToken_own_allowed[].getSubLength()))
===========================================================================
getrichquick.transfer(address,uint256):::EXIT1
this == orig(this)
this.ERC20Basic_own_totalSupply == orig(this.ERC20Basic_own_totalSupply)
this.ERC20Basic_own_totalSupply == sum(this.BasicToken_own_balances[].getValue())
this.ERC20Basic_own_totalSupply == sum(orig(this.BasicToken_own_balances[].getValue()))
this.BasicToken_own_balances == orig(this.BasicToken_own_balances)
this.StandardToken_own_allowed == orig(this.StandardToken_own_allowed)
this.StandardToken_own_allowed[].getSubLength() == orig(this.StandardToken_own_allowed[].getSubLength())
_to == orig(_to)
_value == orig(_value)
msg.sender == orig(msg.sender)
msg.value == orig(msg.value)
msg.value == orig(this.StandardToken_own_allowed[post(pair(_to,msg.sender))].getSubValue())
block.timestamp == orig(block.timestamp)
orig(this.ERC20Basic_own_totalSupply) == sum(this.BasicToken_own_balances[].getValue())
orig(this.ERC20Basic_own_totalSupply) == sum(orig(this.BasicToken_own_balances[].getValue()))
orig(msg.value) == orig(this.StandardToken_own_allowed[post(pair(_to,msg.sender))].getSubValue())
sum(this.BasicToken_own_balances[].getValue()) == sum(orig(this.BasicToken_own_balances[].getValue()))
sum(this.StandardToken_own_allowed[].getSubLength()) == sum(orig(this.StandardToken_own_allowed[].getSubLength()))
this.ERC20Basic_own_totalSupply == 8000000000000000000000
this.BasicToken_own_balances has only one value
this.BasicToken_own_balances[].getValue() elements >= 0
this.StandardToken_own_allowed has only one value
this.StandardToken_own_allowed[].getSubLength() elements == 1
_value one of { 599699499906916349389, 941514888198305181511, 3105400745313977418098 }
msg.value == 0
block.timestamp one of { 11741803, 11741810 }
orig(this) has only one value
orig(this.ERC20Basic_own_totalSupply) == 8000000000000000000000
orig(this.BasicToken_own_balances[].getValue()) elements >= 0
orig(_value) one of { 599699499906916349389, 941514888198305181511, 3105400745313977418098 }
orig(msg.value) == 0
orig(block.timestamp) one of { 11741803, 11741810 }
sum(this.BasicToken_own_balances[].getValue()) == 8000000000000000000000
sum(this.StandardToken_own_allowed[].getSubLength()) == 1
sum(this.StandardToken_own_allowed[].getSubValue()) == 115792089237316195423570985008687907853269984665640564031457584007913129639935
sum(orig(this.BasicToken_own_balances[].getValue())) == 8000000000000000000000
orig(this.BasicToken_own_balances[post(_to)].getValue()) == 3353384866580801051002
orig(this.StandardToken_own_allowed[post(pair(_to,msg.sender))].getSubValue()) == 0
sum(this.StandardToken_own_allowed[].getSubLength()) in this.StandardToken_own_allowed[].getSubLength()
this.StandardToken_own_allowed[].getSubLength() elements == sum(this.StandardToken_own_allowed[].getSubLength())
===========================================================================
getrichquick.transferFrom(address,address,uint256):::EXIT1
this == orig(this)
this.ERC20Basic_own_totalSupply == orig(_value)
this.ERC20Basic_own_totalSupply == this.BasicToken_own_balances[orig(_to)].getValue()
this.BasicToken_own_balances == orig(this.BasicToken_own_balances)
this.StandardToken_own_allowed == orig(this.StandardToken_own_allowed)
this.StandardToken_own_allowed[].getSubLength() == orig(this.StandardToken_own_allowed[].getSubLength())
_from == orig(_from)
_to == orig(_to)
msg.sender == orig(msg.sender)
orig(_value) == this.BasicToken_own_balances[orig(_to)].getValue()
orig(msg.value) == this.BasicToken_own_balances[orig(_from)].getValue()
orig(msg.value) == orig(this.StandardToken_own_allowed[post(pair(_from,_to))].getSubValue())
sum(this.StandardToken_own_allowed[].getSubLength()) == sum(orig(this.StandardToken_own_allowed[].getSubLength()))
sum(this.StandardToken_own_allowed[].getSubValue()) == this.StandardToken_own_allowed[pair(_from,msg.sender)].getSubValue()
sum(orig(this.StandardToken_own_allowed[].getSubValue())) == orig(this.StandardToken_own_allowed[post(pair(_from,msg.sender))].getSubValue())
this.BasicToken_own_balances[orig(_from)].getValue() == orig(this.StandardToken_own_allowed[post(pair(_from,_to))].getSubValue())
this.ERC20Basic_own_totalSupply == 8000000000000000000000
this.BasicToken_own_balances has only one value
this.StandardToken_own_allowed has only one value
this.StandardToken_own_allowed[].getSubLength() elements == 1
orig(this) has only one value
orig(_value) == 8000000000000000000000
orig(msg.value) == 0
orig(block.timestamp) == 11741803
sum(this.StandardToken_own_allowed[].getSubLength()) == 1
sum(this.StandardToken_own_allowed[].getSubValue()) == 115792089237316195423570985008687907853269984665640564031457584007913129639935
sum(orig(this.StandardToken_own_allowed[].getSubValue())) == 115792089237316195423570985008687907853269984665640564039457584007913129639935
this.BasicToken_own_balances[orig(_from)].getValue() == 0
this.BasicToken_own_balances[orig(_to)].getValue() == 8000000000000000000000
this.StandardToken_own_allowed[pair(_from,msg.sender)].getSubValue() == 115792089237316195423570985008687907853269984665640564031457584007913129639935
orig(this.StandardToken_own_allowed[post(pair(_from,_to))].getSubValue()) == 0
orig(this.StandardToken_own_allowed[post(pair(_from,msg.sender))].getSubValue()) == 115792089237316195423570985008687907853269984665640564039457584007913129639935
sum(this.StandardToken_own_allowed[].getSubLength()) in this.StandardToken_own_allowed[].getSubLength()
this.StandardToken_own_allowed[].getSubLength() elements == sum(this.StandardToken_own_allowed[].getSubLength())
Exiting Daikon.
