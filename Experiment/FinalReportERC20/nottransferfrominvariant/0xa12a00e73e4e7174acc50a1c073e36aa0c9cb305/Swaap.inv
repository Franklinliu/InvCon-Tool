Daikon version 5.8.6, released December 2, 2020; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:
Warning: Daikon is using a dataflow hierarchy analysis on a data trace that does not appear to be over a program execution, consider running Daikon with the --nohierarchy flag.

===========================================================================
Swaap.approve(address,uint256):::EXIT2
this == orig(this)
this.owned_own_owner == orig(this.owned_own_owner)
this.TokenERC20_own_decimals == this.TokenERC20_own_totalSupply
this.TokenERC20_own_decimals == this.sellPrice
this.TokenERC20_own_decimals == this.buyPrice
this.TokenERC20_own_decimals == msg.value
this.TokenERC20_own_decimals == orig(this.TokenERC20_own_decimals)
this.TokenERC20_own_decimals == orig(this.TokenERC20_own_totalSupply)
this.TokenERC20_own_decimals == orig(this.sellPrice)
this.TokenERC20_own_decimals == orig(this.buyPrice)
this.TokenERC20_own_decimals == orig(msg.value)
this.TokenERC20_own_decimals == sum(this.TokenERC20_own_balanceOf[].getValue())
this.TokenERC20_own_decimals == orig(this.TokenERC20_own_allowance[post(pair(_spender,msg.sender))].getSubValue())
this.TokenERC20_own_totalSupply == this.sellPrice
this.TokenERC20_own_totalSupply == this.buyPrice
this.TokenERC20_own_totalSupply == msg.value
this.TokenERC20_own_totalSupply == orig(this.TokenERC20_own_decimals)
this.TokenERC20_own_totalSupply == orig(this.TokenERC20_own_totalSupply)
this.TokenERC20_own_totalSupply == orig(this.sellPrice)
this.TokenERC20_own_totalSupply == orig(this.buyPrice)
this.TokenERC20_own_totalSupply == orig(msg.value)
this.TokenERC20_own_totalSupply == sum(this.TokenERC20_own_balanceOf[].getValue())
this.TokenERC20_own_totalSupply == orig(this.TokenERC20_own_allowance[post(pair(_spender,msg.sender))].getSubValue())
this.TokenERC20_own_balanceOf == orig(this.TokenERC20_own_balanceOf)
this.TokenERC20_own_allowance == orig(this.TokenERC20_own_allowance)
this.TokenERC20_own_allowance[].getSubLength() == orig(this.TokenERC20_own_allowance[].getSubLength())
this.sellPrice == this.buyPrice
this.sellPrice == msg.value
this.sellPrice == orig(this.TokenERC20_own_decimals)
this.sellPrice == orig(this.TokenERC20_own_totalSupply)
this.sellPrice == orig(this.sellPrice)
this.sellPrice == orig(this.buyPrice)
this.sellPrice == orig(msg.value)
this.sellPrice == sum(this.TokenERC20_own_balanceOf[].getValue())
this.sellPrice == orig(this.TokenERC20_own_allowance[post(pair(_spender,msg.sender))].getSubValue())
this.buyPrice == msg.value
this.buyPrice == orig(this.TokenERC20_own_decimals)
this.buyPrice == orig(this.TokenERC20_own_totalSupply)
this.buyPrice == orig(this.sellPrice)
this.buyPrice == orig(this.buyPrice)
this.buyPrice == orig(msg.value)
this.buyPrice == sum(this.TokenERC20_own_balanceOf[].getValue())
this.buyPrice == orig(this.TokenERC20_own_allowance[post(pair(_spender,msg.sender))].getSubValue())
this.frozenAccount == orig(this.frozenAccount)
this.frozenAccount[].getValue() == orig(this.frozenAccount[].getValue())
_spender == orig(_spender)
_value == orig(_value)
msg.sender == orig(msg.sender)
msg.value == orig(this.TokenERC20_own_decimals)
msg.value == orig(this.TokenERC20_own_totalSupply)
msg.value == orig(this.sellPrice)
msg.value == orig(this.buyPrice)
msg.value == orig(msg.value)
msg.value == sum(this.TokenERC20_own_balanceOf[].getValue())
msg.value == orig(this.TokenERC20_own_allowance[post(pair(_spender,msg.sender))].getSubValue())
block.timestamp == orig(block.timestamp)
orig(this.TokenERC20_own_decimals) == orig(this.TokenERC20_own_totalSupply)
orig(this.TokenERC20_own_decimals) == orig(this.sellPrice)
orig(this.TokenERC20_own_decimals) == orig(this.buyPrice)
orig(this.TokenERC20_own_decimals) == orig(msg.value)
orig(this.TokenERC20_own_decimals) == sum(this.TokenERC20_own_balanceOf[].getValue())
orig(this.TokenERC20_own_decimals) == orig(this.TokenERC20_own_allowance[post(pair(_spender,msg.sender))].getSubValue())
orig(this.TokenERC20_own_totalSupply) == orig(this.sellPrice)
orig(this.TokenERC20_own_totalSupply) == orig(this.buyPrice)
orig(this.TokenERC20_own_totalSupply) == orig(msg.value)
orig(this.TokenERC20_own_totalSupply) == sum(this.TokenERC20_own_balanceOf[].getValue())
orig(this.TokenERC20_own_totalSupply) == orig(this.TokenERC20_own_allowance[post(pair(_spender,msg.sender))].getSubValue())
orig(this.sellPrice) == orig(this.buyPrice)
orig(this.sellPrice) == orig(msg.value)
orig(this.sellPrice) == sum(this.TokenERC20_own_balanceOf[].getValue())
orig(this.sellPrice) == orig(this.TokenERC20_own_allowance[post(pair(_spender,msg.sender))].getSubValue())
orig(this.buyPrice) == orig(msg.value)
orig(this.buyPrice) == sum(this.TokenERC20_own_balanceOf[].getValue())
orig(this.buyPrice) == orig(this.TokenERC20_own_allowance[post(pair(_spender,msg.sender))].getSubValue())
orig(msg.value) == sum(this.TokenERC20_own_balanceOf[].getValue())
orig(msg.value) == orig(this.TokenERC20_own_allowance[post(pair(_spender,msg.sender))].getSubValue())
sum(this.TokenERC20_own_balanceOf[].getValue()) == orig(this.TokenERC20_own_allowance[post(pair(_spender,msg.sender))].getSubValue())
sum(this.TokenERC20_own_allowance[].getSubLength()) == sum(orig(this.TokenERC20_own_allowance[].getSubLength()))
this.TokenERC20_own_decimals == 0
this.TokenERC20_own_totalSupply == 0
this.TokenERC20_own_balanceOf has only one value
this.TokenERC20_own_allowance has only one value
this.sellPrice == 0
this.buyPrice == 0
this.frozenAccount has only one value
this.frozenAccount[].getValue() elements != null
_value one of { 90071992547409910000000000, 115792089237316195423570985008687907853269984665640564039457584007913129639935 }
msg.value == 0
orig(this) has only one value
orig(this) != null
orig(this.TokenERC20_own_decimals) == 0
orig(this.TokenERC20_own_totalSupply) == 0
orig(this.sellPrice) == 0
orig(this.buyPrice) == 0
orig(_value) one of { 90071992547409910000000000, 115792089237316195423570985008687907853269984665640564039457584007913129639935 }
orig(msg.value) == 0
sum(this.TokenERC20_own_balanceOf[].getValue()) == 0
sum(this.TokenERC20_own_allowance[].getSubLength()) == 0
orig(this.TokenERC20_own_allowance[post(pair(_spender,msg.sender))].getSubValue()) == 0
this.owned_own_owner != orig(_spender)
this.owned_own_owner != orig(msg.sender)
this.TokenERC20_own_decimals < _value
this.TokenERC20_own_decimals < block.timestamp
this.TokenERC20_own_decimals < orig(_value)
this.TokenERC20_own_decimals < orig(block.timestamp)
this.TokenERC20_own_totalSupply < _value
this.TokenERC20_own_totalSupply < block.timestamp
this.TokenERC20_own_totalSupply < orig(_value)
this.TokenERC20_own_totalSupply < orig(block.timestamp)
this.sellPrice < _value
this.sellPrice < block.timestamp
this.sellPrice < orig(_value)
this.sellPrice < orig(block.timestamp)
this.buyPrice < _value
this.buyPrice < block.timestamp
this.buyPrice < orig(_value)
this.buyPrice < orig(block.timestamp)
msg.value < block.timestamp
msg.value < orig(_value)
msg.value < orig(block.timestamp)
block.timestamp < orig(_value)
orig(this.TokenERC20_own_decimals) < orig(_value)
orig(this.TokenERC20_own_decimals) < orig(block.timestamp)
orig(this.TokenERC20_own_totalSupply) < orig(_value)
orig(this.TokenERC20_own_totalSupply) < orig(block.timestamp)
orig(this.sellPrice) < orig(_value)
orig(this.sellPrice) < orig(block.timestamp)
orig(this.buyPrice) < orig(_value)
orig(this.buyPrice) < orig(block.timestamp)
orig(_spender) != orig(msg.sender)
orig(msg.value) < orig(block.timestamp)
===========================================================================
Swaap.burn(uint256):::EXIT2
this == orig(this)
this.owned_own_owner == orig(this.owned_own_owner)
this.TokenERC20_own_decimals == this.TokenERC20_own_totalSupply
this.TokenERC20_own_balanceOf == orig(this.TokenERC20_own_balanceOf)
this.TokenERC20_own_allowance == orig(this.TokenERC20_own_allowance)
this.TokenERC20_own_allowance[].getSubLength() == orig(this.TokenERC20_own_allowance[].getSubLength())
this.frozenAccount == orig(this.frozenAccount)
this.frozenAccount[].getValue() == orig(this.frozenAccount[].getValue())
msg.sender == orig(msg.sender)
sum(this.TokenERC20_own_allowance[].getSubLength()) == sum(orig(this.TokenERC20_own_allowance[].getSubLength()))
this.TokenERC20_own_decimals == 0
this.TokenERC20_own_totalSupply == 0
this.TokenERC20_own_balanceOf has only one value
this.TokenERC20_own_allowance has only one value
this.frozenAccount has only one value
orig(this) has only one value
orig(_value) == 10000000000000
orig(block.timestamp) == 1614326246
sum(this.TokenERC20_own_allowance[].getSubLength()) == 0
===========================================================================
Swaap.freezeAccount(address,bool):::EXIT2
this == orig(this)
this.owned_own_owner == orig(this.owned_own_owner)
this.TokenERC20_own_decimals == this.TokenERC20_own_totalSupply
this.TokenERC20_own_decimals == this.sellPrice
this.TokenERC20_own_decimals == orig(this.TokenERC20_own_allowance[post(pair(target,msg.sender))].getSubValue())
this.TokenERC20_own_totalSupply == this.sellPrice
this.TokenERC20_own_totalSupply == orig(this.TokenERC20_own_allowance[post(pair(target,msg.sender))].getSubValue())
this.TokenERC20_own_balanceOf == orig(this.TokenERC20_own_balanceOf)
this.TokenERC20_own_allowance == orig(this.TokenERC20_own_allowance)
this.TokenERC20_own_allowance[].getSubLength() == orig(this.TokenERC20_own_allowance[].getSubLength())
this.sellPrice == orig(this.TokenERC20_own_allowance[post(pair(target,msg.sender))].getSubValue())
this.frozenAccount == orig(this.frozenAccount)
this.frozenAccount[].getValue() == orig(this.frozenAccount[].getValue())
target == orig(target)
freeze == orig(freeze)
msg.sender == orig(msg.sender)
block.timestamp == orig(block.timestamp)
sum(this.TokenERC20_own_allowance[].getSubLength()) == sum(orig(this.TokenERC20_own_allowance[].getSubLength()))
this.TokenERC20_own_decimals == 0
this.TokenERC20_own_totalSupply == 0
this.TokenERC20_own_balanceOf has only one value
this.TokenERC20_own_allowance has only one value
this.sellPrice == 0
this.frozenAccount has only one value
block.timestamp one of { 1624531151, 1625144169 }
orig(this) has only one value
orig(freeze) == true
orig(block.timestamp) one of { 1624531151, 1625144169 }
sum(this.TokenERC20_own_allowance[].getSubLength()) == 0
orig(this.TokenERC20_own_allowance[post(pair(target,msg.sender))].getSubValue()) == 0
===========================================================================
Swaap.transfer(address,uint256):::EXIT2
this == orig(this)
this.owned_own_owner == orig(this.owned_own_owner)
this.TokenERC20_own_decimals == this.TokenERC20_own_totalSupply
this.TokenERC20_own_decimals == this.sellPrice
this.TokenERC20_own_decimals == this.buyPrice
this.TokenERC20_own_decimals == msg.value
this.TokenERC20_own_decimals == orig(this.TokenERC20_own_decimals)
this.TokenERC20_own_decimals == orig(this.TokenERC20_own_totalSupply)
this.TokenERC20_own_decimals == orig(this.sellPrice)
this.TokenERC20_own_decimals == orig(this.buyPrice)
this.TokenERC20_own_decimals == orig(msg.value)
this.TokenERC20_own_decimals == sum(this.TokenERC20_own_balanceOf[].getValue())
this.TokenERC20_own_decimals == orig(this.TokenERC20_own_allowance[post(pair(_to,msg.sender))].getSubValue())
this.TokenERC20_own_totalSupply == this.sellPrice
this.TokenERC20_own_totalSupply == this.buyPrice
this.TokenERC20_own_totalSupply == msg.value
this.TokenERC20_own_totalSupply == orig(this.TokenERC20_own_decimals)
this.TokenERC20_own_totalSupply == orig(this.TokenERC20_own_totalSupply)
this.TokenERC20_own_totalSupply == orig(this.sellPrice)
this.TokenERC20_own_totalSupply == orig(this.buyPrice)
this.TokenERC20_own_totalSupply == orig(msg.value)
this.TokenERC20_own_totalSupply == sum(this.TokenERC20_own_balanceOf[].getValue())
this.TokenERC20_own_totalSupply == orig(this.TokenERC20_own_allowance[post(pair(_to,msg.sender))].getSubValue())
this.TokenERC20_own_balanceOf == orig(this.TokenERC20_own_balanceOf)
this.TokenERC20_own_allowance == orig(this.TokenERC20_own_allowance)
this.TokenERC20_own_allowance[].getSubLength() == orig(this.TokenERC20_own_allowance[].getSubLength())
this.sellPrice == this.buyPrice
this.sellPrice == msg.value
this.sellPrice == orig(this.TokenERC20_own_decimals)
this.sellPrice == orig(this.TokenERC20_own_totalSupply)
this.sellPrice == orig(this.sellPrice)
this.sellPrice == orig(this.buyPrice)
this.sellPrice == orig(msg.value)
this.sellPrice == sum(this.TokenERC20_own_balanceOf[].getValue())
this.sellPrice == orig(this.TokenERC20_own_allowance[post(pair(_to,msg.sender))].getSubValue())
this.buyPrice == msg.value
this.buyPrice == orig(this.TokenERC20_own_decimals)
this.buyPrice == orig(this.TokenERC20_own_totalSupply)
this.buyPrice == orig(this.sellPrice)
this.buyPrice == orig(this.buyPrice)
this.buyPrice == orig(msg.value)
this.buyPrice == sum(this.TokenERC20_own_balanceOf[].getValue())
this.buyPrice == orig(this.TokenERC20_own_allowance[post(pair(_to,msg.sender))].getSubValue())
this.frozenAccount == orig(this.frozenAccount)
this.frozenAccount[].getValue() == orig(this.frozenAccount[].getValue())
_to == orig(_to)
_value == orig(_value)
msg.sender == orig(msg.sender)
msg.value == orig(this.TokenERC20_own_decimals)
msg.value == orig(this.TokenERC20_own_totalSupply)
msg.value == orig(this.sellPrice)
msg.value == orig(this.buyPrice)
msg.value == orig(msg.value)
msg.value == sum(this.TokenERC20_own_balanceOf[].getValue())
msg.value == orig(this.TokenERC20_own_allowance[post(pair(_to,msg.sender))].getSubValue())
block.timestamp == orig(block.timestamp)
orig(this.TokenERC20_own_decimals) == orig(this.TokenERC20_own_totalSupply)
orig(this.TokenERC20_own_decimals) == orig(this.sellPrice)
orig(this.TokenERC20_own_decimals) == orig(this.buyPrice)
orig(this.TokenERC20_own_decimals) == orig(msg.value)
orig(this.TokenERC20_own_decimals) == sum(this.TokenERC20_own_balanceOf[].getValue())
orig(this.TokenERC20_own_decimals) == orig(this.TokenERC20_own_allowance[post(pair(_to,msg.sender))].getSubValue())
orig(this.TokenERC20_own_totalSupply) == orig(this.sellPrice)
orig(this.TokenERC20_own_totalSupply) == orig(this.buyPrice)
orig(this.TokenERC20_own_totalSupply) == orig(msg.value)
orig(this.TokenERC20_own_totalSupply) == sum(this.TokenERC20_own_balanceOf[].getValue())
orig(this.TokenERC20_own_totalSupply) == orig(this.TokenERC20_own_allowance[post(pair(_to,msg.sender))].getSubValue())
orig(this.sellPrice) == orig(this.buyPrice)
orig(this.sellPrice) == orig(msg.value)
orig(this.sellPrice) == sum(this.TokenERC20_own_balanceOf[].getValue())
orig(this.sellPrice) == orig(this.TokenERC20_own_allowance[post(pair(_to,msg.sender))].getSubValue())
orig(this.buyPrice) == orig(msg.value)
orig(this.buyPrice) == sum(this.TokenERC20_own_balanceOf[].getValue())
orig(this.buyPrice) == orig(this.TokenERC20_own_allowance[post(pair(_to,msg.sender))].getSubValue())
orig(msg.value) == sum(this.TokenERC20_own_balanceOf[].getValue())
orig(msg.value) == orig(this.TokenERC20_own_allowance[post(pair(_to,msg.sender))].getSubValue())
sum(this.TokenERC20_own_balanceOf[].getValue()) == orig(this.TokenERC20_own_allowance[post(pair(_to,msg.sender))].getSubValue())
sum(this.TokenERC20_own_allowance[].getSubLength()) == sum(orig(this.TokenERC20_own_allowance[].getSubLength()))
this.TokenERC20_own_decimals == 0
this.TokenERC20_own_totalSupply == 0
this.TokenERC20_own_balanceOf has only one value
this.TokenERC20_own_allowance has only one value
this.sellPrice == 0
this.buyPrice == 0
this.frozenAccount has only one value
this.frozenAccount[].getValue() elements != null
msg.value == 0
orig(this) has only one value
orig(this) != null
orig(this.TokenERC20_own_decimals) == 0
orig(this.TokenERC20_own_totalSupply) == 0
orig(this.sellPrice) == 0
orig(this.buyPrice) == 0
orig(msg.value) == 0
sum(this.TokenERC20_own_balanceOf[].getValue()) == 0
sum(this.TokenERC20_own_allowance[].getSubLength()) == 0
orig(this.TokenERC20_own_allowance[post(pair(_to,msg.sender))].getSubValue()) == 0
this.owned_own_owner != orig(_to)
this.owned_own_owner != orig(msg.sender)
this.TokenERC20_own_decimals < _value
this.TokenERC20_own_decimals < block.timestamp
this.TokenERC20_own_decimals < orig(_value)
this.TokenERC20_own_decimals < orig(block.timestamp)
this.TokenERC20_own_totalSupply < _value
this.TokenERC20_own_totalSupply < block.timestamp
this.TokenERC20_own_totalSupply < orig(_value)
this.TokenERC20_own_totalSupply < orig(block.timestamp)
this.sellPrice < _value
this.sellPrice < block.timestamp
this.sellPrice < orig(_value)
this.sellPrice < orig(block.timestamp)
this.buyPrice < _value
this.buyPrice < block.timestamp
this.buyPrice < orig(_value)
this.buyPrice < orig(block.timestamp)
msg.value < block.timestamp
msg.value < orig(_value)
msg.value < orig(block.timestamp)
orig(this.TokenERC20_own_decimals) < orig(_value)
orig(this.TokenERC20_own_decimals) < orig(block.timestamp)
orig(this.TokenERC20_own_totalSupply) < orig(_value)
orig(this.TokenERC20_own_totalSupply) < orig(block.timestamp)
orig(this.sellPrice) < orig(_value)
orig(this.sellPrice) < orig(block.timestamp)
orig(this.buyPrice) < orig(_value)
orig(this.buyPrice) < orig(block.timestamp)
orig(msg.value) < orig(block.timestamp)
Exiting Daikon.
