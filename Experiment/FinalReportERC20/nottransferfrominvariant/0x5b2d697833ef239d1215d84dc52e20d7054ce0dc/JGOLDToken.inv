Daikon version 5.8.6, released December 2, 2020; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:
Warning: Daikon is using a dataflow hierarchy analysis on a data trace that does not appear to be over a program execution, consider running Daikon with the --nohierarchy flag.

===========================================================================
JGOLDToken.approve(address,uint256):::EXIT1
this == orig(this)
this.Owned_own_owner == this.minter
this.Owned_own_owner == orig(this.Owned_own_owner)
this.Owned_own_owner == orig(this.minter)
this.Owned_own_newOwner == orig(this.Owned_own_newOwner)
this.decimals == orig(this.decimals)
this._totalSupply == orig(this._totalSupply)
this._totalSupply == sum(this.balances[].getValue())
this.balances == orig(this.balances)
this.allowed == orig(this.allowed)
spender == orig(spender)
tokens == orig(tokens)
tokens == this.allowed[pair(msg.sender,spender)].getSubValue()
msg.sender == orig(msg.sender)
msg.value == orig(msg.value)
msg.value == orig(this.allowed[post(pair(spender,msg.sender))].getSubValue())
block.timestamp == orig(block.timestamp)
orig(this._totalSupply) == sum(this.balances[].getValue())
orig(tokens) == this.allowed[pair(msg.sender,spender)].getSubValue()
orig(msg.value) == orig(this.allowed[post(pair(spender,msg.sender))].getSubValue())
this.decimals == 18
this._totalSupply == 714285000000000000000000
this.balances has only one value
this.allowed has only one value
this.allowed[].getSubLength() elements one of { 1, 2 }
tokens == 115792089237316195423570985008687907853269984665640564039457584007913129639935
msg.value == 0
block.timestamp one of { 1611444442, 1614393928, 1614394582 }
orig(this) has only one value
orig(this.decimals) == 18
orig(this._totalSupply) == 714285000000000000000000
orig(this.allowed[].getSubLength()) elements == 1
orig(tokens) == 115792089237316195423570985008687907853269984665640564039457584007913129639935
orig(msg.value) == 0
orig(block.timestamp) one of { 1611444442, 1614393928, 1614394582 }
sum(this.balances[].getValue()) == 714285000000000000000000
sum(this.allowed[].getSubLength()) one of { 1, 2, 3 }
sum(this.allowed[].getSubValue()) one of { 115792089237316195423570985008687907853269984665640564039457584007913129639935, 231584178474632390847141970017375815706539969331281128078915168015826259279870, 347376267711948586270712955026063723559809953996921692118372752023739388919805 }
sum(orig(this.allowed[].getSubLength())) one of { 0, 1, 2 }
sum(orig(this.allowed[].getSubValue())) one of { 0, 115792089237316195423570985008687907853269984665640564039457584007913129639935, 231584178474632390847141970017375815706539969331281128078915168015826259279870 }
this.balances[this.Owned_own_owner].getValue() one of { 14085000000000000000000, 714285000000000000000000 }
this.balances[orig(msg.sender)].getValue() one of { 700000000000000000000000, 714285000000000000000000 }
this.allowed[pair(msg.sender,spender)].getSubValue() == 115792089237316195423570985008687907853269984665640564039457584007913129639935
orig(this.allowed[post(pair(spender,msg.sender))].getSubValue()) == 0
===========================================================================
JGOLDToken.burn(uint256):::EXIT1
this == orig(this)
this.Owned_own_owner == this.minter
this.Owned_own_owner == msg.sender
this.Owned_own_owner == orig(this.Owned_own_owner)
this.Owned_own_owner == orig(this.minter)
this.Owned_own_owner == orig(msg.sender)
this.Owned_own_newOwner == orig(this.Owned_own_newOwner)
this.decimals == orig(this.decimals)
this._totalSupply == this.balances[this.Owned_own_owner].getValue()
this.balances == orig(this.balances)
this.allowed == orig(this.allowed)
this.allowed[].getSubLength() == orig(this.allowed[].getSubLength())
orig(this._totalSupply) == orig(this.balances[post(msg.sender)].getValue())
sum(this.allowed[].getSubLength()) == sum(orig(this.allowed[].getSubLength()))
this.decimals == 18
this._totalSupply == 714285000000000000000000
this.balances has only one value
this.allowed has only one value
orig(this) has only one value
orig(this.decimals) == 18
orig(this._totalSupply) == 714285000000000000714285
orig(_value) == 714285
orig(msg.value) == 0
orig(block.timestamp) == 1611439675
sum(this.allowed[].getSubLength()) == 0
this.balances[this.Owned_own_owner].getValue() == 714285000000000000000000
orig(this.balances[post(msg.sender)].getValue()) == 714285000000000000714285
===========================================================================
JGOLDToken.mint(address,uint256):::EXIT1
this == orig(this)
this.Owned_own_owner == this.minter
this.Owned_own_owner == receiver
this.Owned_own_owner == msg.sender
this.Owned_own_owner == orig(this.Owned_own_owner)
this.Owned_own_owner == orig(this.minter)
this.Owned_own_owner == orig(receiver)
this.Owned_own_owner == orig(msg.sender)
this.Owned_own_newOwner == orig(this.Owned_own_newOwner)
this.decimals == orig(this.decimals)
this._totalSupply == this.balances[this.Owned_own_owner].getValue()
this.balances == orig(this.balances)
this.allowed == orig(this.allowed)
this.allowed[].getSubLength() == orig(this.allowed[].getSubLength())
orig(this._totalSupply) == orig(this.balances[post(receiver)].getValue())
orig(msg.value) == orig(this.allowed[post(pair(receiver,msg.sender))].getSubValue())
sum(this.allowed[].getSubLength()) == sum(orig(this.allowed[].getSubLength()))
this.decimals == 18
this._totalSupply == 714285000000000000714285
this.balances has only one value
this.allowed has only one value
orig(this) has only one value
orig(this.decimals) == 18
orig(this._totalSupply) == 714285
orig(amount) == 714285000000000000000000
orig(msg.value) == 0
orig(block.timestamp) == 1611438899
sum(this.allowed[].getSubLength()) == 0
this.balances[this.Owned_own_owner].getValue() == 714285000000000000714285
orig(this.balances[post(receiver)].getValue()) == 714285
orig(this.allowed[post(pair(receiver,msg.sender))].getSubValue()) == 0
===========================================================================
JGOLDToken.transfer(address,uint256):::EXIT1
this == orig(this)
this.Owned_own_owner == this.minter
this.Owned_own_owner == msg.sender
this.Owned_own_owner == orig(this.Owned_own_owner)
this.Owned_own_owner == orig(this.minter)
this.Owned_own_owner == orig(msg.sender)
this.Owned_own_newOwner == orig(this.Owned_own_newOwner)
this.decimals == orig(this.decimals)
this._totalSupply == orig(this._totalSupply)
this.balances == orig(this.balances)
this.allowed == orig(this.allowed)
this.allowed[].getSubLength() == orig(this.allowed[].getSubLength())
to == orig(to)
tokens == orig(tokens)
tokens == this.balances[orig(to)].getValue()
msg.value == orig(msg.value)
msg.value == orig(this.allowed[post(pair(to,msg.sender))].getSubValue())
block.timestamp == orig(block.timestamp)
orig(tokens) == this.balances[orig(to)].getValue()
orig(msg.value) == orig(this.allowed[post(pair(to,msg.sender))].getSubValue())
sum(this.allowed[].getSubLength()) == sum(orig(this.allowed[].getSubLength()))
this.decimals == 18
this._totalSupply == 714285000000000000000000
this.balances has only one value
this.allowed has only one value
this.allowed[].getSubLength() elements == 1
tokens one of { 200000000000000000000, 700000000000000000000000 }
msg.value == 0
block.timestamp one of { 1611506539, 1613120819 }
orig(this) has only one value
orig(this.decimals) == 18
orig(this._totalSupply) == 714285000000000000000000
orig(tokens) one of { 200000000000000000000, 700000000000000000000000 }
orig(msg.value) == 0
orig(block.timestamp) one of { 1611506539, 1613120819 }
sum(this.allowed[].getSubLength()) == 1
sum(this.allowed[].getSubValue()) == 115792089237316195423570985008687907853269984665640564039457584007913129639935
this.balances[this.Owned_own_owner].getValue() one of { 14085000000000000000000, 714085000000000000000000 }
this.balances[orig(to)].getValue() one of { 200000000000000000000, 700000000000000000000000 }
orig(this.balances[post(msg.sender)].getValue()) one of { 714085000000000000000000, 714285000000000000000000 }
orig(this.allowed[post(pair(to,msg.sender))].getSubValue()) == 0
sum(this.allowed[].getSubLength()) in this.allowed[].getSubLength()
this.allowed[].getSubLength() elements == sum(this.allowed[].getSubLength())
Exiting Daikon.
