Daikon version 5.8.6, released December 2, 2020; http://plse.cs.washington.edu/daikon.
Reading declaration files Processing trace data; reading 1 dtrace file:
Warning: Daikon is using a dataflow hierarchy analysis on a data trace that does not appear to be over a program execution, consider running Daikon with the --nohierarchy flag.

===========================================================================
ETHER3XBULL.approve(address,uint256):::EXIT1
this == orig(this)
this.decimals == orig(this.decimals)
this.totalSupply == orig(this.totalSupply)
this.totalSupply == sum(this.balances[].getValue())
this.totalSupply == sum(orig(this.balances[].getValue()))
this.balances == orig(this.balances)
this.allow == orig(this.allow)
this.allow[].getValue() == orig(this.allow[].getValue())
this.allowed == orig(this.allowed)
this.owner == orig(this.owner)
_spender == orig(_spender)
_value == orig(_value)
_value == this.allowed[pair(msg.sender,_spender)].getSubValue()
msg.sender == orig(msg.sender)
msg.value == orig(msg.value)
msg.value == orig(this.allowed[post(pair(_spender,msg.sender))].getSubValue())
block.timestamp == orig(block.timestamp)
orig(this.totalSupply) == sum(this.balances[].getValue())
orig(this.totalSupply) == sum(orig(this.balances[].getValue()))
orig(_value) == this.allowed[pair(msg.sender,_spender)].getSubValue()
orig(msg.value) == orig(this.allowed[post(pair(_spender,msg.sender))].getSubValue())
sum(this.balances[].getValue()) == sum(orig(this.balances[].getValue()))
this.allow[this.owner].getValue() == this.allow[orig(this.owner)].getValue()
this.allow[this.owner].getValue() == this.allow[orig(msg.sender)].getValue()
this.allow[this.owner].getValue() == orig(this.allow[post(this.owner)].getValue())
this.allow[this.owner].getValue() == orig(this.allow[this.owner].getValue())
this.allow[msg.sender].getValue() == this.allow[orig(msg.sender)].getValue()
this.allow[orig(msg.sender)].getValue() == orig(this.allow[post(msg.sender)].getValue())
this.allow[orig(msg.sender)].getValue() == orig(this.allow[msg.sender].getValue())
this.decimals == 18
this.totalSupply == 10000000000000000000000
this.balances has only one value
this.balances[].getValue() elements >= 0
this.allow has only one value
this.allow[].getValue() elements == true
this.allowed has only one value
this.allowed[].getSubLength() elements == 1
this.allowed[].getSubValue() sorted by <=
_value == 115792089237316195423570985008687907853269984665640564039457584007913129639935
msg.value == 0
orig(this) has only one value
orig(this.decimals) == 18
orig(this.totalSupply) == 10000000000000000000000
orig(this.allowed[].getSubLength()) elements == 1
orig(this.allowed[].getSubValue()) sorted by <=
orig(_value) == 115792089237316195423570985008687907853269984665640564039457584007913129639935
orig(msg.value) == 0
sum(this.balances[].getValue()) == 10000000000000000000000
sum(orig(this.balances[].getValue())) == 10000000000000000000000
this.balances[this.owner].getValue() one of { 0, 10000000000000000000000 }
this.allow[this.owner].getValue() == true
this.allow[orig(msg.sender)].getValue() == true
this.allowed[pair(msg.sender,_spender)].getSubValue() == 115792089237316195423570985008687907853269984665640564039457584007913129639935
orig(this.allowed[post(pair(_spender,msg.sender))].getSubValue()) == 0
this.decimals < this.totalSupply
this.decimals < _value
this.decimals < block.timestamp
this.decimals < orig(this.totalSupply)
this.decimals < orig(_value)
this.decimals < orig(block.timestamp)
this.decimals < sum(this.balances[].getValue())
this.decimals < sum(this.allowed[].getSubValue())
this.decimals < sum(orig(this.balances[].getValue()))
this.decimals < this.balances[orig(msg.sender)].getValue()
this.decimals < this.allowed[pair(msg.sender,_spender)].getSubValue()
this.totalSupply < _value
this.totalSupply < orig(_value)
this.totalSupply < sum(this.allowed[].getSubValue())
this.totalSupply < this.allowed[pair(msg.sender,_spender)].getSubValue()
this.allow[].getValue() elements == this.allow[this.owner].getValue()
this.allow[this.owner].getValue() in this.allow[].getValue()
this.allow[].getValue() elements == this.allow[orig(msg.sender)].getValue()
this.allow[orig(msg.sender)].getValue() in this.allow[].getValue()
this.allowed[].getSubLength() > orig(this.allowed[].getSubLength()) (lexically)
this.allowed[].getSubLength() >= orig(this.allowed[].getSubLength()) (lexically)
this.owner != orig(_spender)
_value <= sum(this.allowed[].getSubValue())
msg.value < block.timestamp
msg.value < orig(this.decimals)
msg.value < orig(this.totalSupply)
msg.value < orig(_value)
msg.value < orig(block.timestamp)
msg.value < sum(this.balances[].getValue())
msg.value < sum(this.allowed[].getSubValue())
msg.value < sum(orig(this.balances[].getValue()))
msg.value <= sum(orig(this.allowed[].getSubValue()))
msg.value <= this.balances[this.owner].getValue()
msg.value < this.balances[orig(msg.sender)].getValue()
msg.value < this.allowed[pair(msg.sender,_spender)].getSubValue()
block.timestamp < orig(this.totalSupply)
block.timestamp < orig(_value)
block.timestamp < sum(this.balances[].getValue())
block.timestamp < sum(this.allowed[].getSubValue())
block.timestamp < sum(orig(this.balances[].getValue()))
block.timestamp < this.balances[orig(msg.sender)].getValue()
block.timestamp < this.allowed[pair(msg.sender,_spender)].getSubValue()
orig(this.decimals) < orig(this.totalSupply)
orig(this.decimals) < orig(_value)
orig(this.decimals) < orig(block.timestamp)
orig(this.decimals) < sum(this.balances[].getValue())
orig(this.decimals) < sum(this.allowed[].getSubValue())
orig(this.decimals) < sum(orig(this.balances[].getValue()))
orig(this.decimals) < this.balances[orig(msg.sender)].getValue()
orig(this.decimals) < this.allowed[pair(msg.sender,_spender)].getSubValue()
orig(this.totalSupply) < orig(_value)
orig(this.totalSupply) < sum(this.allowed[].getSubValue())
orig(this.totalSupply) < this.allowed[pair(msg.sender,_spender)].getSubValue()
orig(_spender) != orig(msg.sender)
orig(_value) <= sum(this.allowed[].getSubValue())
orig(msg.value) < orig(block.timestamp)
orig(msg.value) < sum(this.allowed[].getSubValue())
orig(msg.value) <= sum(orig(this.allowed[].getSubValue()))
orig(msg.value) <= this.balances[this.owner].getValue()
orig(msg.value) < this.balances[orig(msg.sender)].getValue()
orig(msg.value) < this.allowed[pair(msg.sender,_spender)].getSubValue()
orig(block.timestamp) < sum(this.allowed[].getSubValue())
orig(block.timestamp) < this.balances[orig(msg.sender)].getValue()
orig(block.timestamp) < this.allowed[pair(msg.sender,_spender)].getSubValue()
sum(this.balances[].getValue()) < sum(this.allowed[].getSubValue())
sum(this.balances[].getValue()) < this.allowed[pair(msg.sender,_spender)].getSubValue()
sum(this.allowed[].getSubLength()) - sum(orig(this.allowed[].getSubLength())) - 1 == 0
sum(orig(this.balances[].getValue())) < this.allowed[pair(msg.sender,_spender)].getSubValue()
this.balances[this.owner].getValue() <= this.balances[orig(msg.sender)].getValue()
this.balances[this.owner].getValue() < this.allowed[pair(msg.sender,_spender)].getSubValue()
this.balances[orig(msg.sender)].getValue() < this.allowed[pair(msg.sender,_spender)].getSubValue()
this.allowed[pair(msg.sender,_spender)].getSubValue() > orig(this.allowed[post(pair(_spender,msg.sender))].getSubValue())
===========================================================================
ETHER3XBULL.transfer(address,uint256):::EXIT1
this == orig(this)
this.decimals == orig(this.decimals)
this.totalSupply == orig(this.totalSupply)
this.totalSupply == sum(this.balances[].getValue())
this.totalSupply == sum(orig(this.balances[].getValue()))
this.balances == orig(this.balances)
this.allow == orig(this.allow)
this.allow[].getValue() == orig(this.allow[].getValue())
this.allowed == orig(this.allowed)
this.allowed[].getSubLength() == orig(this.allowed[].getSubLength())
this.owner == orig(this.owner)
_to == orig(_to)
_value == orig(_value)
msg.sender == orig(msg.sender)
msg.value == orig(msg.value)
msg.value == this.balances[this.owner].getValue()
msg.value == orig(this.balances[post(this.owner)].getValue())
msg.value == orig(this.allowed[post(pair(_to,msg.sender))].getSubValue())
block.timestamp == orig(block.timestamp)
orig(this.totalSupply) == sum(this.balances[].getValue())
orig(this.totalSupply) == sum(orig(this.balances[].getValue()))
orig(msg.value) == this.balances[this.owner].getValue()
orig(msg.value) == orig(this.balances[post(this.owner)].getValue())
orig(msg.value) == orig(this.allowed[post(pair(_to,msg.sender))].getSubValue())
sum(this.balances[].getValue()) == sum(orig(this.balances[].getValue()))
sum(this.allowed[].getSubLength()) == sum(orig(this.allowed[].getSubLength()))
sum(this.allowed[].getSubValue()) == sum(orig(this.allowed[].getSubValue()))
this.balances[this.owner].getValue() == orig(this.balances[post(this.owner)].getValue())
this.balances[this.owner].getValue() == orig(this.allowed[post(pair(_to,msg.sender))].getSubValue())
this.allow[this.owner].getValue() == this.allow[orig(this.owner)].getValue()
this.allow[this.owner].getValue() == orig(this.allow[post(this.owner)].getValue())
this.allow[this.owner].getValue() == orig(this.allow[this.owner].getValue())
orig(this.balances[post(this.owner)].getValue()) == orig(this.allowed[post(pair(_to,msg.sender))].getSubValue())
this.decimals == 18
this.totalSupply == 10000000000000000000000
this.balances has only one value
this.balances[].getValue() elements >= 0
this.allow has only one value
this.allow[].getValue() elements == true
this.allowed has only one value
this.allowed[].getSubLength() elements == 1
this.allowed[].getSubValue() sorted by <=
msg.value == 0
orig(this) has only one value
orig(this.decimals) == 18
orig(this.totalSupply) == 10000000000000000000000
orig(this.balances[].getValue()) elements >= 0
orig(msg.value) == 0
sum(this.balances[].getValue()) == 10000000000000000000000
sum(this.allowed[].getSubLength()) one of { 1, 3, 4 }
sum(this.allowed[].getSubValue()) one of { 115792089237316195423570985008687907853269984665640564029457584007913129639935, 347376267711948586270712955026063723559809953996921692108372752023739388919805, 463168356949264781694283940034751631413079938662562256147830336031652518559740 }
sum(orig(this.balances[].getValue())) == 10000000000000000000000
sum(orig(this.allowed[].getSubValue())) one of { 115792089237316195423570985008687907853269984665640564029457584007913129639935, 347376267711948586270712955026063723559809953996921692108372752023739388919805, 463168356949264781694283940034751631413079938662562256147830336031652518559740 }
this.balances[this.owner].getValue() == 0
this.allow[this.owner].getValue() == true
orig(this.balances[post(this.owner)].getValue()) == 0
orig(this.balances[post(_to)].getValue()) == 7848384705644181317578
orig(this.allowed[post(pair(_to,msg.sender))].getSubValue()) == 0
this.decimals < this.totalSupply
this.decimals < _value
this.decimals < block.timestamp
this.decimals < orig(this.totalSupply)
this.decimals < orig(_value)
this.decimals < orig(block.timestamp)
this.decimals < sum(this.balances[].getValue())
this.decimals < sum(this.allowed[].getSubValue())
this.decimals < sum(orig(this.balances[].getValue()))
this.decimals < sum(orig(this.allowed[].getSubValue()))
this.decimals < this.balances[orig(_to)].getValue()
this.decimals < orig(this.balances[post(msg.sender)].getValue())
this.totalSupply < sum(this.allowed[].getSubValue())
this.totalSupply < sum(orig(this.allowed[].getSubValue()))
this.allow[].getValue() elements == this.allow[this.owner].getValue()
this.allow[this.owner].getValue() in this.allow[].getValue()
this.owner != orig(_to)
this.owner != orig(msg.sender)
_value < orig(this.totalSupply)
_value < sum(this.balances[].getValue())
_value < sum(this.allowed[].getSubValue())
_value < sum(orig(this.balances[].getValue()))
_value < sum(orig(this.allowed[].getSubValue()))
_value <= this.balances[orig(_to)].getValue()
_value <= orig(this.balances[post(msg.sender)].getValue())
msg.value < block.timestamp
msg.value < orig(this.decimals)
msg.value < orig(this.totalSupply)
msg.value < orig(_value)
msg.value < orig(block.timestamp)
msg.value < sum(this.balances[].getValue())
msg.value < sum(this.allowed[].getSubValue())
msg.value < sum(orig(this.balances[].getValue()))
msg.value < sum(orig(this.allowed[].getSubValue()))
msg.value < this.balances[orig(_to)].getValue()
msg.value <= this.balances[orig(msg.sender)].getValue()
msg.value < orig(this.balances[post(msg.sender)].getValue())
block.timestamp < orig(this.totalSupply)
block.timestamp < orig(_value)
block.timestamp < sum(this.balances[].getValue())
block.timestamp < sum(this.allowed[].getSubValue())
block.timestamp < sum(orig(this.balances[].getValue()))
block.timestamp < sum(orig(this.allowed[].getSubValue()))
block.timestamp < this.balances[orig(_to)].getValue()
block.timestamp < orig(this.balances[post(msg.sender)].getValue())
orig(this.decimals) < orig(this.totalSupply)
orig(this.decimals) < orig(_value)
orig(this.decimals) < orig(block.timestamp)
orig(this.decimals) < sum(this.balances[].getValue())
orig(this.decimals) < sum(this.allowed[].getSubValue())
orig(this.decimals) < sum(orig(this.balances[].getValue()))
orig(this.decimals) < sum(orig(this.allowed[].getSubValue()))
orig(this.decimals) < this.balances[orig(_to)].getValue()
orig(this.decimals) < orig(this.balances[post(msg.sender)].getValue())
orig(this.totalSupply) < sum(this.allowed[].getSubValue())
orig(this.totalSupply) < sum(orig(this.allowed[].getSubValue()))
orig(_to) != orig(msg.sender)
orig(_value) < sum(this.allowed[].getSubValue())
orig(_value) < sum(orig(this.allowed[].getSubValue()))
orig(_value) <= this.balances[orig(_to)].getValue()
orig(_value) <= orig(this.balances[post(msg.sender)].getValue())
orig(msg.value) < orig(block.timestamp)
orig(msg.value) < sum(this.allowed[].getSubValue())
orig(msg.value) < sum(orig(this.allowed[].getSubValue()))
orig(msg.value) < this.balances[orig(_to)].getValue()
orig(msg.value) <= this.balances[orig(msg.sender)].getValue()
orig(msg.value) < orig(this.balances[post(msg.sender)].getValue())
orig(block.timestamp) < sum(this.allowed[].getSubValue())
orig(block.timestamp) < sum(orig(this.allowed[].getSubValue()))
orig(block.timestamp) < this.balances[orig(_to)].getValue()
orig(block.timestamp) < orig(this.balances[post(msg.sender)].getValue())
sum(this.balances[].getValue()) < sum(this.allowed[].getSubValue())
sum(this.balances[].getValue()) < sum(orig(this.allowed[].getSubValue()))
this.balances[this.owner].getValue() < this.balances[orig(_to)].getValue()
this.balances[this.owner].getValue() <= this.balances[orig(msg.sender)].getValue()
this.balances[this.owner].getValue() < orig(this.balances[post(msg.sender)].getValue())
this.balances[orig(msg.sender)].getValue() < orig(this.balances[post(msg.sender)].getValue())
orig(this.balances[post(this.owner)].getValue()) < orig(this.balances[post(msg.sender)].getValue())
_value + this.balances[orig(msg.sender)].getValue() - orig(this.balances[post(msg.sender)].getValue()) == 0
orig(_value) + this.balances[orig(msg.sender)].getValue() - orig(this.balances[post(msg.sender)].getValue()) == 0
===========================================================================
ETHER3XBULL.transfer(address,uint256):::EXIT2
this == orig(this)
this.decimals == orig(this.decimals)
this.balances == orig(this.balances)
this.allow == orig(this.allow)
this.allow[].getValue() == orig(this.allow[].getValue())
this.allowed == orig(this.allowed)
this.allowed[].getSubLength() == orig(this.allowed[].getSubLength())
this.owner == orig(this.owner)
_to == orig(_to)
msg.sender == orig(msg.sender)
orig(msg.value) == this.balances[this.owner].getValue()
orig(msg.value) == orig(this.allowed[post(pair(_to,msg.sender))].getSubValue())
sum(this.allowed[].getSubLength()) == sum(orig(this.allowed[].getSubLength()))
this.balances[this.owner].getValue() == orig(this.allowed[post(pair(_to,msg.sender))].getSubValue())
this.allow[this.owner].getValue() == this.allow[orig(this.owner)].getValue()
this.allow[this.owner].getValue() == orig(this.allow[post(this.owner)].getValue())
this.allow[this.owner].getValue() == orig(this.allow[this.owner].getValue())
this.decimals == 18
this.totalSupply == 10000000000000000000000
this.balances has only one value
this.allow has only one value
this.allow[].getValue() elements == true
this.allowed has only one value
this.allowed[].getSubLength() elements == 1
orig(this) has only one value
orig(this.decimals) == 18
orig(_value) == 627856543598384181797
orig(msg.value) == 0
orig(block.timestamp) == 11743005
sum(this.allowed[].getSubLength()) == 1
sum(this.allowed[].getSubValue()) == 115792089237316195423570985008687907853269984665640564029457584007913129639935
this.balances[this.owner].getValue() == 0
this.balances[orig(msg.sender)].getValue() == 9280618793815214335771
this.allow[this.owner].getValue() == true
orig(this.allowed[post(pair(_to,msg.sender))].getSubValue()) == 0
this.allow[].getValue() elements == this.allow[this.owner].getValue()
this.allow[this.owner].getValue() in this.allow[].getValue()
sum(this.allowed[].getSubLength()) in this.allowed[].getSubLength()
this.allowed[].getSubLength() elements == sum(this.allowed[].getSubLength())
===========================================================================
ETHER3XBULL.transferFrom(address,address,uint256):::EXIT1
this == orig(this)
this.decimals == orig(this.decimals)
this.totalSupply == this.balances[orig(_to)].getValue()
this.balances == orig(this.balances)
this.allow == orig(this.allow)
this.allow[].getValue() == orig(this.allow[].getValue())
this.allowed == orig(this.allowed)
this.allowed[].getSubLength() == orig(this.allowed[].getSubLength())
this.owner == _from
this.owner == orig(this.owner)
this.owner == orig(_from)
_to == orig(_to)
msg.sender == orig(msg.sender)
orig(msg.value) == this.balances[this.owner].getValue()
orig(msg.value) == orig(this.allowed[post(pair(_from,_to))].getSubValue())
sum(this.allowed[].getSubLength()) == sum(orig(this.allowed[].getSubLength()))
sum(this.allowed[].getSubValue()) == this.allowed[pair(_from,msg.sender)].getSubValue()
sum(orig(this.allowed[].getSubValue())) == orig(this.allowed[post(pair(_from,msg.sender))].getSubValue())
this.balances[this.owner].getValue() == orig(this.allowed[post(pair(_from,_to))].getSubValue())
this.allow[this.owner].getValue() == this.allow[_from].getValue()
this.allow[this.owner].getValue() == this.allow[orig(this.owner)].getValue()
this.allow[this.owner].getValue() == this.allow[orig(_from)].getValue()
this.allow[this.owner].getValue() == orig(this.allow[post(this.owner)].getValue())
this.allow[this.owner].getValue() == orig(this.allow[post(_from)].getValue())
this.allow[this.owner].getValue() == orig(this.allow[this.owner].getValue())
this.allow[this.owner].getValue() == orig(this.allow[_from].getValue())
this.decimals == 18
this.totalSupply == 10000000000000000000000
this.balances has only one value
this.allow has only one value
this.allow[].getValue() elements == true
this.allowed has only one value
this.allowed[].getSubLength() elements == 1
orig(this) has only one value
orig(this.decimals) == 18
orig(msg.value) == 0
orig(block.timestamp) == 11742990
sum(this.allowed[].getSubLength()) == 1
sum(this.allowed[].getSubValue()) == 115792089237316195423570985008687907853269984665640564029457584007913129639935
sum(orig(this.allowed[].getSubValue())) == 115792089237316195423570985008687907853269984665640564039457584007913129639935
this.balances[this.owner].getValue() == 0
this.balances[orig(_to)].getValue() == 10000000000000000000000
this.allow[this.owner].getValue() == true
this.allowed[pair(_from,msg.sender)].getSubValue() == 115792089237316195423570985008687907853269984665640564029457584007913129639935
orig(this.allowed[post(pair(_from,_to))].getSubValue()) == 0
orig(this.allowed[post(pair(_from,msg.sender))].getSubValue()) == 115792089237316195423570985008687907853269984665640564039457584007913129639935
this.allow[].getValue() elements == this.allow[this.owner].getValue()
this.allow[this.owner].getValue() in this.allow[].getValue()
sum(this.allowed[].getSubLength()) in this.allowed[].getSubLength()
this.allowed[].getSubLength() elements == sum(this.allowed[].getSubLength())
Exiting Daikon.
